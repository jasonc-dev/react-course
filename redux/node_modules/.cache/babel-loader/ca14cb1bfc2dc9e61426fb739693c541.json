{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment() {},\n\n    decrement() {},\n\n    increase() {},\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter // set all states when we update - overwrites all states by default\n\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/jasoncohen/React/redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","decrement","increase","toggleCounter","counterReducer","state","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,GAAG,CAAE,CADN;;AAERC,IAAAA,SAAS,GAAG,CAAE,CAFN;;AAGRC,IAAAA,QAAQ,GAAG,CAAE,CAHL;;AAIRC,IAAAA,aAAa,GAAG,CAAE;;AAJV;AAHA,CAAD,CAAX;;AAWA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLX,MAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEQ,KAAK,CAACR,WAFd,CAE2B;;AAF3B,KAAP;AAID;;AAED,MAAIS,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLX,MAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgBU,MAAM,CAACE,MAD3B;AAELX,MAAAA,WAAW,EAAEQ,KAAK,CAACR;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLX,MAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEQ,KAAK,CAACR;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLV,MAAAA,WAAW,EAAE,CAACQ,KAAK,CAACR,WADf;AAELD,MAAAA,OAAO,EAAES,KAAK,CAACT;AAFV,KAAP;AAID;;AAED,SAAOS,KAAP;AACD,CA9BD;;AAgCA,MAAMI,KAAK,GAAGhB,WAAW,CAACW,cAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCounter() {},\n  },\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter, // set all states when we update - overwrites all states by default\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}