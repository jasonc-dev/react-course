{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\n\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method,\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/Users/jasoncohen/React/custom-hooks-realistic/src/hooks/use-https.js"],"names":["useEffect","useHttp","requestConfig","applyData","isLoading","setIsLoading","useState","error","setError","sendRequest","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,OAAO,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA8B;AAAA;;AAC5C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMG,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtCL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AAEA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACV,aAAa,CAACW,GAAf,EAAoB;AAC9CC,QAAAA,MAAM,EAAEZ,aAAa,CAACY,MADwB;AAE9CC,QAAAA,OAAO,EAAEb,aAAa,CAACa,OAFuB;AAG9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,aAAa,CAACc,IAA7B;AAHwC,OAApB,CAA5B;;AAMA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAnB,MAAAA,SAAS,CAACkB,IAAD,CAAT;AACD,KAbD,CAaE,OAAOE,GAAP,EAAY;AACZf,MAAAA,QAAQ,CAACe,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArBD;;AAuBA,SAAO;AACLD,IAAAA,SADK;AAELG,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAhCD;;GAAMR,O;;AAkCN,eAAeA,OAAf","sourcesContent":["import { useEffect } from \"react\";\n\nconst useHttp = (requestConfig, applyData) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method,\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}