{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncohen/React/react-forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const isNotEmpty = () => value.trim() !== \"\";\n\n  const isEmail = () => value.includes(\"@\");\n\n  const {\n    value: firstNameValue,\n    hasError: firstNameInputHasError,\n    isValid: enteredFirstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    hasError: lastNameInputHasError,\n    isValid: enteredLastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(isEmail);\n  let formIsValid = false;\n\n  if (enteredFirstName && enteredLastName && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredLastNameIsValid || enteredLastNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(firstNameValue + \" \" + lastNameValue);\n    resetFirstNameInput(\"\");\n    resetLastNameInput(\"\");\n    resetEmailInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"bPyMpS2XPAsjsCcnVhbghKv88qI=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/jasoncohen/React/react-forms/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","isNotEmpty","value","trim","isEmail","includes","firstNameValue","hasError","firstNameInputHasError","isValid","enteredFirstNameIsValid","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstNameInput","lastNameValue","lastNameInputHasError","enteredLastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","emailInputHasError","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","enteredFirstName","enteredLastName","formSubmissionHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const isNotEmpty = () => value.trim() !== \"\";\n  const isEmail = () => value.includes(\"@\");\n\n  const {\n    value: firstNameValue,\n    hasError: firstNameInputHasError,\n    isValid: enteredFirstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: lastNameValue,\n    hasError: lastNameInputHasError,\n    isValid: enteredLastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n  if (enteredFirstName && enteredLastName && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      !enteredLastNameIsValid ||\n      enteredLastNameIsValid ||\n      !enteredEmailIsValid\n    ) {\n      return;\n    }\n\n    console.log(firstNameValue + \" \" + lastNameValue);\n\n    resetFirstNameInput(\"\");\n    resetLastNameInput(\"\");\n    resetEmailInput(\"\");\n  };\n\n  return (\n    <form>\n      <div className=\"control-group\">\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\" />\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}