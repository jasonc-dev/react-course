{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncohen/React/react-forms/src/components/BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const isNotEmpty = () => value.trim() !== \"\";\n\n  const isEmail = () => value.includes(\"@\");\n\n  const {\n    value: firstNameValue,\n    hasError: FirstNameIsValid,\n    isValid: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    hasError: lastNameIsValid,\n    isValid: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    hasError: emailHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(isEmail);\n  let formIsValid = false;\n\n  if (lastNameValue && lastNameValue && enteredEmail) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!FirstNameIsValid || lastNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(firstNameValue + \" \" + lastNameValue);\n    resetFirstName(\"\");\n    resetLastName(\"\");\n    resetEmailInput(\"\");\n  };\n\n  const firstNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"CGXI6OMonM55IVdQFUrpuTQPu2U=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["/Users/jasoncohen/React/react-forms/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","isNotEmpty","value","trim","isEmail","includes","firstNameValue","hasError","FirstNameIsValid","isValid","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","emailHasError","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","formSubmissionHandler","event","preventDefault","console","log","firstNameClasses","lastNameClasses","emailClasses"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const isNotEmpty = () => value.trim() !== \"\";\n  const isEmail = () => value.includes(\"@\");\n\n  const {\n    value: firstNameValue,\n    hasError: FirstNameIsValid,\n    isValid: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: lastNameValue,\n    hasError: lastNameIsValid,\n    isValid: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredEmail,\n    hasError: emailHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n  if (lastNameValue && lastNameValue && enteredEmail) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!FirstNameIsValid || lastNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(firstNameValue + \" \" + lastNameValue);\n\n    resetFirstName(\"\");\n    resetLastName(\"\");\n    resetEmailInput(\"\");\n  };\n\n  const firstNameClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameChangeHandler}\n          />\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}