{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\n\nconst initialInputState = state => {\n  return {\n    value: \"\",\n    isTouched: false\n  };\n};\n\nconst inputStateReducer = (state, action) => {\n  return inputStateReducer;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({\n      type: \"BLUR\"\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/jasoncohen/React/react-forms/src/hooks/use-input.js"],"names":["useReducer","initialInputState","state","value","isTouched","inputStateReducer","action","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","type","target","inputBlurHandler","reset","enteredValue","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,SAAS,EAAE;AAFN,GAAP;AAID,CALD;;AAOA,MAAMC,iBAAiB,GAAG,CAACH,KAAD,EAAQI,MAAR,KAAmB;AAC3C,SAAOD,iBAAP;AACD,CAFD;;AAIA,MAAME,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,UAAU,CACvCK,iBADuC,EAEvCJ,iBAFuC,CAAzC;AAKA,QAAMU,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACN,KAAZ,CAAlC;AACA,QAAMS,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACL,SAA7C;;AAEA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,OAAR;AAAiBZ,MAAAA,KAAK,EAAEW,KAAK,CAACE,MAAN,CAAab;AAArC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMc,gBAAgB,GAAIH,KAAD,IAAW;AAClCJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,KAAK,GAAG,MAAM;AAClBR,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AACLZ,IAAAA,KAAK,EAAEgB,YADF;AAELC,IAAAA,OAAO,EAAET,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLI,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA7BD;;GAAMX,Q;;AA+BN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputState = (state) => {\n  return {\n    value: \"\",\n    isTouched: false,\n  };\n};\n\nconst inputStateReducer = (state, action) => {\n  return inputStateReducer;\n};\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (event) => {\n    dispatch({ type: \"INPUT\", value: event.target.value });\n  };\n\n  const inputBlurHandler = (event) => {\n    dispatch({ type: \"BLUR\" });\n  };\n\n  const reset = () => {\n    dispatch({ type: \"RESET\" });\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}